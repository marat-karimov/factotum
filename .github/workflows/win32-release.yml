name: Test and Release

on: 
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.0

      - name: Install node dependencies
        run: yarn install

      - name: Install python dependencies
        run: npm run setup-venv
        
      - name: Install Wix Toolset
        run: |
          choco install wixtoolset -y --version 3.11.2
          echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Determine next version
        shell: bash
        id: version
        run: |
          TAG=$(git describe --tags --abbrev=0)
          VERSION=$(echo ${TAG#v} | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
        
      - name: Decode PFX
        shell: bash
        run: |
          echo "${{ secrets.PFX_BASE64 }}" | base64 --decode > certificate.pfx
        env:
          CSC_LINK: ${{ github.workspace }}/certificate.pfx
          CSC_KEY_PASSWORD: ${{ secrets.PFX_PASSWORD }}

      - name: Build Electron app
        run: npm run pack

      - name: List dist dir
        run: echo $(ls dist dist/win/unpacked)
        shell: bash

      - name: Run Playwright tests
        run: npm run test

      - name: Make executables
        run: npm run dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (MSI)
        id: upload-release-asset-msi
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/Factotum.msi
          asset_name: Factotum-${{ env.VERSION }}.msi
          asset_content_type: application/x-msi

      - name: Upload to Azure Blob Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} --account-key ${{ secrets.AZURE_STORAGE_ACCESS_KEY }} --name ${{ env.VERSION }}/Factotum.msi --type block --file ./dist/Factotum.msi --container-name factotum
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-report
          path: |
            test-results/


